//! Test for a basic serverless handler using the #[serverless] macro

use serverless_rs::{Context, Request, Response, Result};
use serverless_rs_macros::serverless;

#[serverless(name = "basic_handler")]
pub async fn handler(req: Request, ctx: &Context) -> Result<Response> {
    Ok(Response::text("Hello, world!"))
}

async fn main() {
    // Now the module `basic_handler` generated by the macro is in scope
    let info = basic_handler::function_info();
    let ctx = Context::new();
    let req = Request::new();
    let result = basic_handler::handler(req, &ctx).await;
    assert_eq!(info.name, "basic_handler");
    assert_eq!(
        info.description,
        Some("Serverless function basic_handler".to_string())
    );
    assert!(result.is_ok());
    assert_eq!(result.unwrap().body(), b"Hello, world!");
}
